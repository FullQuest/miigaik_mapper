# Generated by Django 3.2 on 2025-06-24 12:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Attribute mappings',
            },
        ),
        migrations.CreateModel(
            name='CategoryMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Category mappings',
            },
        ),
        migrations.CreateModel(
            name='FeedCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=255)),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Feed categories',
            },
        ),
        migrations.CreateModel(
            name='FeedCategoryAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('deleted', models.BooleanField(default=False)),
                ('is_tag', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Feed category attributes',
            },
        ),
        migrations.CreateModel(
            name='FeedCategoryAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Feed category attribute values',
            },
        ),
        migrations.CreateModel(
            name='FeedMarketplaceMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_sync_date', models.DateTimeField(blank=True, help_text='Last date of successful synchronization', null=True)),
                ('error', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeedMarketplaceSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('hidden', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Feed marketplace settings',
            },
        ),
        migrations.CreateModel(
            name='FeedMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.TextField()),
                ('domain', models.CharField(max_length=50, unique=True)),
                ('custom_name', models.CharField(blank=True, max_length=50, null=True)),
                ('login', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('parsed', models.SmallIntegerField(default=0)),
                ('updated', models.SmallIntegerField(default=0)),
                ('deleted', models.BooleanField(default=False)),
                ('last_parsed_date', models.DateTimeField(blank=True, help_text='Last date of successful parse feed', null=True)),
                ('parsed_hash', models.TextField(blank=True, editable=False, null=True)),
                ('error', models.CharField(blank=True, max_length=50, null=True)),
                ('error_description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Feeds',
            },
        ),
        migrations.CreateModel(
            name='MapperAlertEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('send_notifications', models.BooleanField(default=False, verbose_name='Подписаться на задачи по маппингу')),
                ('notifications_time', models.TimeField(blank=True, help_text='Время для рассылки задач по маппингу', null=True)),
                ('get_mapping_report', models.BooleanField(default=False, verbose_name='Получать отчет по маппингу')),
            ],
        ),
        migrations.CreateModel(
            name='MarketAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.TextField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('data_type', models.TextField(blank=True, null=True)),
                ('restricted', models.BooleanField(default=False)),
                ('required', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
                ('ignore_data_type', models.BooleanField(default=False)),
                ('map_equal_values', models.BooleanField(default=False)),
                ('default_value_id', models.IntegerField(blank=True, null=True)),
                ('map_feed_attribute_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_rich_content', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Marketplace attributes',
            },
        ),
        migrations.CreateModel(
            name='MarketAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.TextField()),
                ('deleted', models.BooleanField(default=False)),
                ('info', models.TextField(blank=True, null=True)),
                ('picture_url', models.TextField(blank=True, max_length=300, null=True)),
            ],
            options={
                'verbose_name_plural': 'Marketplace category attribute values',
            },
        ),
        migrations.CreateModel(
            name='MarketAttributeValueDictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Marketplace attribute value dictionaries',
            },
        ),
        migrations.CreateModel(
            name='MarketCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('source_id', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('updated', models.BooleanField(default=False)),
                ('leaf', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Marketplace categories',
            },
        ),
        migrations.CreateModel(
            name='Marketplace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marketplace', models.CharField(choices=[('beru', 'Beru'), ('lamoda', 'Lamoda'), ('ozon', 'Ozon'), ('wildberries', 'Wildberries'), ('yandex', 'Yandex')], max_length=50, unique=True)),
                ('client', models.CharField(default='B2basket', max_length=10)),
                ('api_key', models.CharField(max_length=100)),
                ('api_url', models.CharField(blank=True, max_length=100, null=True)),
                ('sandbox_url', models.CharField(blank=True, max_length=100, null=True)),
                ('client_id', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Marketplaces',
            },
        ),
        migrations.CreateModel(
            name='ValueUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Value units',
            },
        ),
        migrations.CreateModel(
            name='ValueUnitMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multiplier', models.FloatField()),
                ('value_unit_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromvaluemap', to='mapper.valueunit')),
                ('value_unit_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tovaluemap', to='mapper.valueunit')),
            ],
            options={
                'verbose_name_plural': 'Value unit maps',
            },
        ),
        migrations.CreateModel(
            name='ValueMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.attributemap')),
                ('feed_attribute_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.feedcategoryattributevalue')),
                ('marketplace_attribute_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.marketattributevalue')),
            ],
            options={
                'verbose_name_plural': 'Attribute value mappings',
            },
        ),
        migrations.CreateModel(
            name='MarketCategoryAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required', models.BooleanField(default=False)),
                ('restricted', models.BooleanField(default=False)),
                ('is_collection', models.BooleanField(default=False)),
                ('max_count', models.IntegerField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.marketattribute')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.marketcategory')),
            ],
            options={
                'verbose_name_plural': 'Marketplace category attributes',
            },
        ),
        migrations.AddField(
            model_name='marketcategory',
            name='marketplace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.marketplace'),
        ),
        migrations.AddField(
            model_name='marketcategory',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.marketcategory'),
        ),
        migrations.AddIndex(
            model_name='marketattributevaluedictionary',
            index=models.Index(fields=['source_id'], name='mapper_mark_source__888caa_idx'),
        ),
        migrations.AddField(
            model_name='marketattributevalue',
            name='dictionary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.marketattributevaluedictionary'),
        ),
        migrations.AddField(
            model_name='marketattribute',
            name='dictionary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.marketattributevaluedictionary'),
        ),
        migrations.AddField(
            model_name='marketattribute',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mapper.valueunit'),
        ),
        migrations.AddField(
            model_name='mapperalertemail',
            name='feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_emails', to='mapper.feedmeta'),
        ),
        migrations.AddField(
            model_name='feedmarketplacesettings',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='feedmarketplacesettings',
            name='feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.feedmeta'),
        ),
        migrations.AddField(
            model_name='feedmarketplacesettings',
            name='marketplace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.marketplace'),
        ),
        migrations.AddField(
            model_name='feedmarketplacemap',
            name='feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.feedmeta'),
        ),
        migrations.AddField(
            model_name='feedmarketplacemap',
            name='marketplace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.marketplace'),
        ),
        migrations.AddField(
            model_name='feedcategoryattributevalue',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.feedcategoryattribute'),
        ),
        migrations.AddField(
            model_name='feedcategoryattribute',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.feedcategory'),
        ),
        migrations.AddField(
            model_name='feedcategoryattribute',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mapper.valueunit'),
        ),
        migrations.AddField(
            model_name='feedcategory',
            name='feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.feedmeta'),
        ),
        migrations.AddField(
            model_name='feedcategory',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mapper.feedcategory'),
        ),
        migrations.AddField(
            model_name='categorymap',
            name='feed_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.feedcategory'),
        ),
        migrations.AddField(
            model_name='categorymap',
            name='marketplace_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.marketcategory'),
        ),
        migrations.AddField(
            model_name='attributemap',
            name='category_map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.categorymap'),
        ),
        migrations.AddField(
            model_name='attributemap',
            name='feed_attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.feedcategoryattribute'),
        ),
        migrations.AddField(
            model_name='attributemap',
            name='marketplace_attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mapper.marketcategoryattribute'),
        ),
        migrations.AlterUniqueTogether(
            name='valueunitmap',
            unique_together={('value_unit_from', 'value_unit_to')},
        ),
        migrations.AlterUniqueTogether(
            name='valuemap',
            unique_together={('attribute_map', 'feed_attribute_value', 'marketplace_attribute_value')},
        ),
        migrations.AddIndex(
            model_name='marketattributevalue',
            index=models.Index(fields=['source_id'], name='mapper_mark_source__7bfb40_idx'),
        ),
        migrations.AddIndex(
            model_name='marketattribute',
            index=models.Index(fields=['source_id'], name='mapper_mark_source__2fc79c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='mapperalertemail',
            unique_together={('feed', 'email')},
        ),
        migrations.AlterUniqueTogether(
            name='feedmarketplacesettings',
            unique_together={('feed', 'marketplace', 'content_type', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='categorymap',
            unique_together={('feed_category', 'marketplace_category')},
        ),
        migrations.AlterUniqueTogether(
            name='attributemap',
            unique_together={('category_map', 'feed_attribute', 'marketplace_attribute')},
        ),
    ]
